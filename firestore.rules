rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users Collection Rules:
    // - Any authenticated user can read any user's profile (for searching, etc.).
    // - A user can only create or update their OWN profile document.
    // - Deleting profiles from the client is disallowed.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Friends Subcollection Rules:
    // - This collection is managed by the `acceptFriendRequest` Cloud Function.
    // - Client-side writes are disallowed to enforce backend logic.
    // - A user can only read their OWN friends list.
    match /users/{userId}/friends/{friendId} {
        allow read: if request.auth.uid == userId;
        allow write: if false; // Disallow direct client writes
    }
    
    // Friend Requests Collection Rules:
    // - A user can only create a request where they are the sender.
    // - A user can only read a request if they are the sender or receiver.
    // - A user can only update/delete a request if they are the sender or receiver.
    match /friendRequests/{requestId} {
      allow read, update, delete: if request.auth != null && (request.auth.uid == resource.data.fromUserId || request.auth.uid == resource.data.toUserId);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.fromUserId;
    }
    
    // Chats Collection Rules:
    // - A user can only read or write to a chat if their UID is in the `userIds` array.
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.userIds;
    }
  }
}
