rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
      allow delete: if false;

      // Users can read their own friends list.
      // Writes are only allowed by the backend (Cloud Function).
      match /friends/{friendId} {
        allow read: if request.auth.uid == userId;
        allow write: if request.auth == null; // Admin/backend access only
      }
    }

    // Rules for handling friend requests.
    match /friendRequests/{requestId} {
      // Allow read if user is the sender or receiver.
      allow read: if request.auth != null && (request.auth.uid == resource.data.fromUserId || request.auth.uid == resource.data.toUserId);
      
      // Allow user to create a request if they are the sender.
      allow create: if request.auth.uid == request.resource.data.fromUserId;
      
      // Allow user to update (decline) or backend to update (accept).
      allow update: if request.auth != null;
      
      // Do not allow client-side deletion.
      allow delete: if false;
    }

    // Rules for chat rooms.
    match /chats/{chatId} {
      // Allow read and write only if the user is a participant in the chat.
      allow read, write: if request.auth != null && request.auth.uid in resource.data.userIds;
    }
  }
}
