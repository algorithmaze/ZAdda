rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Allow users to create and update their own profile.
    // Allow any authenticated user to read other user profiles (for friend lists).
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // A user can only write to their own friends subcollection.
    // This is managed by the acceptFriendRequest Cloud Function.
    match /users/{userId}/friends/{friendId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Disallow direct client writes
    }

    // Users can create requests. They can read/update/delete requests involving them.
    match /friendRequests/{requestId} {
       allow read: if request.auth != null && (request.auth.uid == resource.data.fromUserId || request.auth.uid == resource.data.toUserId);
       allow create: if request.auth.uid == request.resource.data.fromUserId;
       // Only the sender or receiver can update or delete a request.
       // We check request.resource.data for the state *before* the change.
       allow update, delete: if request.auth != null && (request.auth.uid == request.resource.data.fromUserId || request.auth.uid == request.resource.data.toUserId);
    }
    
    // Users can read/write to chats they are a member of.
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.userIds;
    }
  }
}
