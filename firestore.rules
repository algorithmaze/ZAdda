
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Allow users to create and update their own profile.
    // Allow any authenticated user to read other user profiles (for friend lists).
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // A user can only manage their own friends list.
    // This is primarily written to by the acceptFriendRequest Cloud Function.
    match /users/{userId}/friends/{friendId} {
      allow read, write, delete: if request.auth.uid == userId;
    }

    // Rules for friend requests.
    match /friendRequests/{requestId} {
      // CREATE: A user can only create a request from their own user ID.
      allow create: if request.auth.uid == request.resource.data.fromUserId;

      // READ: Only the sender or receiver can read the request.
      allow read: if request.auth.uid == resource.data.fromUserId || request.auth.uid == resource.data.toUserId;
      
      // UPDATE: 
      // The receiver can update the status (e.g., to 'accepted' or 'declined').
      // The sender can update the status if it's currently 'pending' (to cancel it).
      allow update: if (request.auth.uid == resource.data.toUserId) || 
                       (request.auth.uid == resource.data.fromUserId && resource.data.status == 'pending');

      // DELETE: No user should be able to delete requests directly for data integrity.
      allow delete: if false;
    }
    
    // Users can read/write to chats they are a member of.
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.userIds;
    }
  }
}
