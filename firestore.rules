rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Any authenticated user can read any user's profile.
    // - A user can only create or update their own document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Friends Subcollection
    // - A user can only manage their own friends list.
    // - Writes are blocked to force creation via the `acceptFriendRequest` cloud function.
    match /users/{userId}/friends/{friendId} {
      allow read, delete: if request.auth.uid == userId;
      allow write: if false;
    }

    // Friend Requests Collection
    // - Users can create requests if the 'fromUserId' is their own.
    // - Only the sender or receiver can read the request.
    // - Only the receiver can update the status (to accept/decline).
    // - Only the sender can delete a pending request (cancel).
    match /friendRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.fromUserId;
      allow read: if request.auth.uid == resource.data.fromUserId || request.auth.uid == resource.data.toUserId;
      allow update: if request.auth.uid == resource.data.toUserId;
      allow delete: if request.auth.uid == resource.data.fromUserId;
    }
    
    // Chats Collection
    // - Users can only read or write to chats they are a member of.
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.userIds;
    }
  }
}
